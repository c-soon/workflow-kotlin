name: Kotlin CI

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      # Don't build the entire app when just changing tutorials, which have their own workflow.
      - 'samples/tutorial/**'

jobs:

  cancel-stale-jobs:
    runs-on: ubuntu-latest
    steps:
      # If CI is already running for a branch when that branch is updated, cancel the older jobs.
      - name: Cancel Stale Jobs
        uses: styfle/cancel-workflow-action@0.9.1
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

  dokka:
    name: Assemble & Dokka
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11.0.7
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.7

      ## Actual task
      - uses : burrunan/gradle-cache-action@v1
        name : Assemble with gradle â€” make sure everything builds
        with :
          gradle-dependencies-cache-key : |
            gradle/libs.versions.toml
          arguments : |
            assemble --no-daemon --stacktrace
          concurrent : true
          gradle-build-scan-report : false
          gradle-distribution-sha-256-sum-warning : false

      # This should ideally be done as a Check job below, but it needs to be done as a separate
      # step after running assemble. Heckin' ridikalus.
      # Probably fixed in dokka 1.4.10, but we can't move to kotlin 1.4 yet.
      #  https://github.com/square/workflow/issues/1152.
      - uses : burrunan/gradle-cache-action@v1
        name : Run dokka to validate kdoc
        with :
          gradle-dependencies-cache-key : |
            gradle/libs.versions.toml
          arguments : |
            siteDokka --build-cache --no-daemon --stacktrace
          concurrent : true
          gradle-build-scan-report : false
          gradle-distribution-sha-256-sum-warning : false

  # These are all pretty quick so we run them on a single shard. Fewer shards, less queueing.
  check:
    name: Check
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1
      - name: set up JDK 11.0.7
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.7

      ## Actual task
      - uses : burrunan/gradle-cache-action@v1
        name : Check with Gradle
        with :
          gradle-dependencies-cache-key : |
            gradle/libs.versions.toml
          arguments : |
            test apiCheck artifactsCheck lint ktlintCheck jmhJar --no-daemon --stacktrace --continue
          concurrent : true
          gradle-build-scan-report : false
          gradle-distribution-sha-256-sum-warning : false

  instrumentation-tests:
    name: Instrumentation tests
    runs-on: macos-latest
    timeout-minutes: 45
    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: false
      matrix:
        api-level:
          - 29
      # Unclear that older versions actually honor command to disable animation.
      # Newer versions are reputed to be too slow: https://github.com/ReactiveCircus/android-emulator-runner/issues/222
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11.0.7
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.7

      ## Build before running tests, using cache.
      - uses : burrunan/gradle-cache-action@v1
        name : Build instrumented tests
        with :
          gradle-dependencies-cache-key : |
            gradle/libs.versions.toml
          arguments : |
            assembleDebugAndroidTest --no-daemon --stacktrace
          concurrent : true
          gradle-build-scan-report : false
          gradle-distribution-sha-256-sum-warning : false

      ## Actual task
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          # @ychescale9 suspects Galaxy Nexus is the fastest one
          profile: Galaxy Nexus
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          # Skip the benchmarks as this is running on emulators
          script: ./gradlew connectedCheck -x :benchmarks:dungeon-benchmark:connectedReleaseAndroidTest --no-daemon --stacktrace

      - name: Upload results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: instrumentation-test-results-${{ matrix.api-level }}
          path: ./**/build/reports/androidTests/connected/**
